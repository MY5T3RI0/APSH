# TRP-3-22, Банницин Дмитрий

# 1

print("Даны строки S и S0. Найти количество вхождений строки S0 в строку S.")

S = input("S = ")
S0 = input("S0 = ")
count = 0

while S0 in S:
    position = S.find(S0)
    S = S[:position] + S[(position+len(S0)):]
    count += 1

print("Answer: ", count)

# 2

print("Даны строки S и S0. Удалить из строки S первую подстроку,"
      " совпадающую с S0. Если совпадающих подстрок нет, то вывести строку"
      " S без изменений.")

S = input("S = ")
S0 = input("S0 = ")

position = S.find(S0)
if S0 in S:
    S = S[:position] + S[(position+len(S0)):]

print("Answer: ", S)

# 3

print("Даны строки S, S1 и S2. Заменить в строке S последнее вхождение строки"
      " S1 на строку S2.")

S = input("S = ")
S1 = input("S1 = ")
S2 = input("S2 = ")

position = 0

while S1 in S[position+1:]:
    print(position)
    if S[position:].find(S1) != -1:
        position += S[position+len(S1):].find(S1) + len(S1)

S = S[:position] + S2 + S[(position+len(S1)):]

print("Answer: ", S)

# 4

print("Дана строка, содержащая по крайней мере один символ пробела."
      " Вывести подстроку, расположенную между первым и вторым"
      " пробелом исходной строки. Если строка содержит только один пробел,"
      " то вывести пустую строку.")

S = input("S = ")

S = S[S.find(" ") + 1: S.find(" ") + 1 + S[S.find(" ") + 1:].find(" ")]

print("Answer: ", S)

# 5

print("Дана строка, содержащая по крайней мере один символ пробела."
      " Вывести подстроку, расположенную между первым и последним"
      " пробелом исходной строки. Если строка содержит только один пробел,"
      " то вывести пустую строку.")

S = input("S = ")

S = S[S.find(" ") + 1: len(S) - S[::-1].find(" ") - 1]

print("Answer: ", S)

# 6

print("Дана строка, состоящая из русских слов, разделенных пробелами"
      " (одним или несколькими). Найти количество слов в строке.")

S = input("S = ")
count = 0

for word in S.split():
    count += 1

print("Answer: ", count)

# 7

print("Дана строка, состоящая из русских слов, набранных заглавными"
      " буквами и разделенных пробелами(одним или несколькими). Найти"
      " количество слов, которые начинаются и заканчиваются одной и тойже"
      " буквой.")

S = input("S = ")
count = 0

for word in S.split():
    if word[0] == word[len(word)-1]:
        count += 1

print("Answer: ", count)

# 8

print("Дана строка, состоящая из русских слов, набранных заглавными"
      " буквами и разделенных пробелами(одним или несколькими). Найти"
      " количество слов, которые содержат хотя бы одну букву «А».")

S = input("S = ")
count = 0

for word in S.split():
    if "А" in word:
        count += 1

print("Answer: ", count)

# 9

print("Дана строка-предложение с избыточными пробелами между словами."
      " Преобразовать ее так, чтобы между словами был ровно один пробел.")

S = input("S = ")

print("Answer: ", end=" ")

for word in S.split():
    print(word, end=" ")

# 10

print("Дана строка, состоящая из русских слов, разделенных пробелами"
      " (одним или несколькими). Найти длину самого короткого слова.")

S = input("S = ")

print("Answer: ", min(S.split(), key=lambda w: len(w)))

# 11

print("Дана строка, состоящая из русских слов, набранных заглавными"
      " буквами и разделенных пробелами(одним или несколькими)."
      " Преобразовать каждое слово в строке, заменив в нем все последующие"
      " вхождения его первой буквы на символ «.» (точка). Например, слово"
      " «МИНИМУМ» надо преобразовать в «МИНИ.У.». Количество"
      " пробелов между словами не изменять.")

S = input("S = ")

for word in S.split():
    print(word[0], end="")
    print(word[1:].replace(word[0], "."), end=" ")

# 12

print("Дана строка, состоящая из русских слов, набранных заглавными"
      " буквами и разделенных пробелами(одним или несколькими). Вывести"
      " строку, содержащую эти же слова, разделенные одним пробелом и"
      " расположенные в алфавитном порядке.")

S = input("S = ").upper().split()

while S:
    print(min(S), end=" ")
    S.remove(min(S))

# 13

print("Дана строка-предложение на русском языке. Подсчитать количество"
      " содержащихся в строке знаков препинания")

S = input("S = ")

count = 0

for char in S:
    if not (char.isalnum() or char.isspace()):
        count += 1

print("Answer: ", count)

# 14

print("Дана строка, содержащая полное имя файла, то есть имя диска, список"
      " каталогов(путь), собственно имя и расширение. Выделить из этой"
      " строки имя файла(без расширения).")

S = input("S = ").split("\\")

print("Answer: ", S[len(S)-1][: S[len(S)-1].find(".")])

# 15

print("Дана строка, содержащая полное имя файла, то есть имя диска, список"
      " каталогов(путь), собственно имя и расширение. Выделить из этой"
      " строки расширение файла(без предшествующей точки).")

S = input("S = ").split("\\")

print("Answer: ", S[len(S)-1][S[len(S)-1].find(".")+1:])

# 16

print("Дана строка, содержащая полное имя файла. Выделить из этой строки"
      " название первого каталога(без символов «\»). Если файл содержится в"
      " корневом каталоге, то вывести символ «\».")

S = input("S = ").split("\\")

if len(S) > 2:
    print("Answer: ", S[1])
else:
    print("\\")

# 17

print("Дана строка-предложение на русском языке. Зашифровать ее,"
      " выполнив циклическую замену каждой буквы на следующую за ней в"
      " алфавите и сохранив при этом регистр букв(«А» перейдет в «Б», «а»"
      " — в «б», «Б» — в «В», «я» — в «а» и т. д.). Букву «ё» в алфавите не"
      " учитывать(«е» должна переходить в «ж»). Знаки препинания и"
      " пробелы не изменять.")

S = input("S = ")

for char in S:
    if char.isalpha():
        if char == "я":
            print("а", end="")
        else:
            print(chr(ord(char)+1), end="")
    else:
        print(char, end="")

# 18

print("Дана строка-предложение на русском языке и число K(0 < K < 10)."
      "Зашифровать строку, выполнив циклическую замену каждой буквы на"
      "букву того же регистра, расположенную в алфавите на K-й позиции"
      "после шифруемой буквы(например, для K=2 «А» перейдет в «В», «а»"
      "— в «в», «Б» — в «Г», «я» — в «б» и т. д.). Букву «ё» в алфавите не"
      "учитывать, знаки препинания и пробелы не изменять.")

S = input("S = ")
K = int(input("K = "))

for char in S:
    if char.isalpha():
        for n in range(0, K):
            if char == "я":
                char = "а"
            else:
                char = chr(ord(char)+1)
        print(char, end="")
    else:
        print(char, end="")

# 19

print("Дано зашифрованное предложение на русском языке(способ"
      " шифрования описан в предыдущем задании) и кодовое смещение K(0 <"
      " K < 10). Расшифровать предложение.")

S = input("S = ")
K = int(input("K = "))

for char in S:
    if char.isalpha():
        for n in range(0, K):
            if char == "а":
                char = "я"
            else:
                char = chr(ord(char)-1)
        print(char, end="")
    else:
        print(char, end="")

# 20

print("Дана строка, содержащая латинские буквы и скобки трех видов: «()»,"
      "«[]», «{}». Если скобки расставлены правильно(то есть каждой"
      "открывающей соответствует закрывающая скобка того же вида), то"
      "вывести число 0. В противном случае вывести или номер позиции, в"
      "которой расположена первая ошибочная скобка, или, если"
      "закрывающих скобок не хватает, число –1.")

S = input("S = ")
stack = []
position = 0

for char in S:
    if char == "[" or char == "{" or char == "(":
        stack.append(char)
    elif char == "]" or char == "}" or char == ")":
        temp = stack.pop()
        if char != chr(ord(temp)+1) and char != chr(ord(temp)+2):
            print(position)
            exit()
    position += 1

if len(stack) > 0:
    print(-1)
else:
    print(0)
